--- a/configure.ac	2007-06-08 13:53:13.000000000 +0100
+++ b/configure.ac	2018-03-21 15:41:15.064271614 +0000
@@ -10,7 +10,7 @@
 AC_PROG_CC
 AC_PROG_LIBTOOL
 
-PKG_CHECK_MODULES(SCHEDULE, glib-2.0 sqlite libgpewidget)
+PKG_CHECK_MODULES(SCHEDULE, glib-2.0 sqlite3 libgpewidget)
 
 ENABLE_HAVEAT=false
 
--- a/configure	2007-06-08 13:53:41.000000000 +0100
+++ b/configure	2018-03-21 17:54:31.801393948 +0000
@@ -19254,12 +19254,12 @@
         pkg_cv_SCHEDULE_CFLAGS="$SCHEDULE_CFLAGS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"glib-2.0 sqlite libgpewidget\"") >&5
-  ($PKG_CONFIG --exists --print-errors "glib-2.0 sqlite libgpewidget") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"glib-2.0 sqlite3 libgpewidget\"") >&5
+  ($PKG_CONFIG --exists --print-errors "glib-2.0 sqlite3 libgpewidget") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_SCHEDULE_CFLAGS=`$PKG_CONFIG --cflags "glib-2.0 sqlite libgpewidget" 2>/dev/null`
+  pkg_cv_SCHEDULE_CFLAGS=`$PKG_CONFIG --cflags "glib-2.0 sqlite3 libgpewidget" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -19272,12 +19272,12 @@
         pkg_cv_SCHEDULE_LIBS="$SCHEDULE_LIBS"
     else
         if test -n "$PKG_CONFIG" && \
-    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"glib-2.0 sqlite libgpewidget\"") >&5
-  ($PKG_CONFIG --exists --print-errors "glib-2.0 sqlite libgpewidget") 2>&5
+    { (echo "$as_me:$LINENO: \$PKG_CONFIG --exists --print-errors \"glib-2.0 sqlite3 libgpewidget\"") >&5
+  ($PKG_CONFIG --exists --print-errors "glib-2.0 sqlite3 libgpewidget") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  pkg_cv_SCHEDULE_LIBS=`$PKG_CONFIG --libs "glib-2.0 sqlite libgpewidget" 2>/dev/null`
+  pkg_cv_SCHEDULE_LIBS=`$PKG_CONFIG --libs "glib-2.0 sqlite3 libgpewidget" 2>/dev/null`
 else
   pkg_failed=yes
 fi
@@ -19296,14 +19296,14 @@
         _pkg_short_errors_supported=no
 fi
         if test $_pkg_short_errors_supported = yes; then
-	        SCHEDULE_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "glib-2.0 sqlite libgpewidget"`
+	        SCHEDULE_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "glib-2.0 sqlite3 libgpewidget"`
         else
-	        SCHEDULE_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "glib-2.0 sqlite libgpewidget"`
+	        SCHEDULE_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "glib-2.0 sqlite3 libgpewidget"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$SCHEDULE_PKG_ERRORS" >&5
 
-	{ { echo "$as_me:$LINENO: error: Package requirements (glib-2.0 sqlite libgpewidget) were not met:
+	{ { echo "$as_me:$LINENO: error: Package requirements (glib-2.0 sqlite3 libgpewidget) were not met:
 
 $SCHEDULE_PKG_ERRORS
 
@@ -19314,7 +19314,7 @@
 and SCHEDULE_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.
 " >&5
-echo "$as_me: error: Package requirements (glib-2.0 sqlite libgpewidget) were not met:
+echo "$as_me: error: Package requirements (glib-2.0 sqlite3 libgpewidget) were not met:
 
 $SCHEDULE_PKG_ERRORS

--- a/atd.c	2007-01-16 21:57:57.000000000 +0000
+++ b/atd.c	2018-03-21 23:10:12.308121813 +0000
@@ -18,7 +18,7 @@
 
 #include <glib.h>
 
-#include <sqlite.h>
+#include <sqlite3.h>
 #include <gpe/errorbox.h>
 
 #include "gpe/schedule.h"
@@ -27,7 +27,7 @@
 
 #define TRIGGER ATD_BASE "/trigger"
 
-static sqlite *sqliteh;
+static sqlite3 *sqliteh;
 static const char *fname = "/.gpe/next_alarm_id";
 
 char *no_export[] =
@@ -65,7 +65,7 @@
   buf = g_malloc (len);
   strcpy (buf, home);
   strcat (buf, fname);
-  sqliteh = sqlite_open (buf, 0, &err);
+  sqliteh = sqlite3_open (buf, 0);
   g_free (buf);
   if (sqliteh == NULL)
     {
@@ -74,9 +74,9 @@
       return FALSE;
     }
 
-  sqlite_exec (sqliteh, schema_str, NULL, NULL, &err);
+  sqlite3_exec (sqliteh, schema_str, NULL, NULL);
   
-  if (sqlite_exec (sqliteh, "select alarm_uid from alarms", dbinfo_callback, NULL, &err))
+  if (sqlite3_exec (sqliteh, "select alarm_uid from alarms", dbinfo_callback, NULL))
     {
       alarm_uid=-1;
       gpe_error_box (err);
